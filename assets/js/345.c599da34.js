(window.webpackJsonp=window.webpackJsonp||[]).push([[345],{369:function(r,a,t){"use strict";t.r(a);var e=t(2),s=Object(e.a)({},function(){var r=this,a=r.$createElement,t=r._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"arraybuffer-对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer-对象","aria-hidden":"true"}},[r._v("#")]),r._v(" ArrayBuffer 对象")]),r._v(" "),t("p",[t("code",[r._v("ArrayBuffer")]),r._v(" 对象用来表示通用的、固定长度的原始二进制数据缓冲区。"),t("code",[r._v("ArrayBuffer")]),r._v(" 不能直接操作，而是要通过类型数组对象 或 "),t("code",[r._v("DataView")]),r._v(" 对象来操作，它们会将缓冲区中的数据表示为特定的格式，并通过这些格式来读写缓冲区的内容。")]),r._v(" "),t("p",[r._v("JavaScript 中的 Array 类型，因为有很多功能，而且是不限制类型的，或者它还可能是稀疏的。而如果你从 XHR、FileAPI、Canvas等各种地方，读取了一大串字节流，如果用 JavaScript 里的 Array 去存储，不仅浪费空间且低效。于是为了配合这些新的API，增强 JavaScript 的二进制处理能力，就有了 ArrayBuffer。")]),r._v(" "),t("p",[r._v("ArrayBuffer 简单来说就是一片内存，但是你不能（也不方便）直接访问它里面的字节。而要访问 ArrayBuffer，则需要通过 Typed Array 类型引用。（可以将 ArrayBuffer 理解为"),t("strong",[r._v("带类型的高速数组")]),r._v("或"),t("strong",[r._v("类型化数组")]),r._v("）")]),r._v(" "),t("p",[r._v("使用场景：上传图片读取和显示、Canvas转换图片下载、WebGL等")]),r._v(" "),t("h2",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[r._v("#")]),r._v(" 语法")]),r._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("new")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[r._v("ArrayBuffer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),r._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(";")]),r._v("\n")])])]),t("h3",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[r._v("#")]),r._v(" 参数")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("参数")]),r._v(" "),t("th",[r._v("类型")]),r._v(" "),t("th",[r._v("说明")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[t("code",[r._v("length")])]),r._v(" "),t("td",[t("code",[r._v("Number")]),r._v(" 类型")]),r._v(" "),t("td",[r._v("要创建的 "),t("code",[r._v("ArrayBuffer")]),r._v(" 的大小，单位为字节。")])])])]),r._v(" "),t("h3",{attrs:{id:"返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#返回值","aria-hidden":"true"}},[r._v("#")]),r._v(" 返回值")]),r._v(" "),t("p",[r._v("一个指定大小的 "),t("code",[r._v("ArrayBuffer")]),r._v(" 对象，其内容被初始化为 0。")]),r._v(" "),t("h3",{attrs:{id:"描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#描述","aria-hidden":"true"}},[r._v("#")]),r._v(" 描述")]),r._v(" "),t("p",[t("code",[r._v("ArrayBuffer")]),r._v(" 构造函数用来创建一个指定字节长度的 "),t("code",[r._v("ArrayBuffer")]),r._v(" 对象。")]),r._v(" "),t("p",[t("strong",[r._v("以现有数据获取 ArrayBuffer")])]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Appendix.3A_Decode_a_Base64_string_to_Uint8Array_or_ArrayBuffer",target:"_blank",rel:"noopener noreferrer"}},[r._v("从 Base64 字符串"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader#readAsArrayBuffer()",target:"_blank",rel:"noopener noreferrer"}},[r._v("从本地文件"),t("OutboundLink")],1)])]),r._v(" "),t("h2",{attrs:{id:"arraybuffer-构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer-构造函数","aria-hidden":"true"}},[r._v("#")]),r._v(" ArrayBuffer 构造函数")]),r._v(" "),t("h3",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[r._v("#")]),r._v(" 属性")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("属性")]),r._v(" "),t("th",[r._v("描述")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[t("code",[r._v("ArrayBuffer.length")])]),r._v(" "),t("td",[r._v("ArrayBuffer 构造函数的 length 属性，其值为1。")])]),r._v(" "),t("tr",[t("td",[t("code",[r._v("get ArrayBuffer[@@species]")])]),r._v(" "),t("td",[r._v("返回 ArrayBuffer 的构造函数。")])]),r._v(" "),t("tr",[t("td",[t("code",[r._v("ArrayBuffer.prototype")])]),r._v(" "),t("td",[r._v("通过 ArrayBuffer 的原型对象可以为所有 ArrayBuffer 对象添加属性。")])])])]),r._v(" "),t("h3",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[r._v("#")]),r._v(" 方法")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("方法")]),r._v(" "),t("th",[r._v("描述")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[t("code",[r._v("ArrayBuffer.isView(arg)")])]),r._v(" "),t("td",[r._v("如果参数是 ArrayBuffer 的视图实例则返回 "),t("code",[r._v("true")]),r._v("，例如 类型数组对象 或 "),t("code",[r._v("DataView")]),r._v(" 对象；否则返回 "),t("code",[r._v("false")]),r._v("。")])]),r._v(" "),t("tr",[t("td",[t("code",[r._v("ArrayBuffer.transfer(oldBuffer [, newByteLength]);")])]),r._v(" "),t("td",[r._v("返回一个新的 ArrayBuffer 对象，其内容取自 "),t("code",[r._v("oldBuffer")]),r._v(" 中的数据，并且根据 "),t("code",[r._v("newByteLength")]),r._v(" 的大小对数据进行截取或补 0。")])]),r._v(" "),t("tr",[t("td",[t("code",[r._v("ArrayBuffer.slice()")])]),r._v(" "),t("td",[r._v("和 "),t("code",[r._v("ArrayBuffer.prototype.slice()")]),r._v(" 功能相同。")])])])]),r._v(" "),t("h2",{attrs:{id:"arraybuffer实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer实例","aria-hidden":"true"}},[r._v("#")]),r._v(" ArrayBuffer实例")]),r._v(" "),t("h3",{attrs:{id:"属性-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性-2","aria-hidden":"true"}},[r._v("#")]),r._v(" 属性")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("属性")]),r._v(" "),t("th",[r._v("描述")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[t("code",[r._v("ArrayBuffer.prototype.constructor")])]),r._v(" "),t("td",[r._v("指定函数，它创建一个对象的原型。其初始值是标准ArrayBuffer内置构造函数。")])]),r._v(" "),t("tr",[t("td",[t("code",[r._v("ArrayBuffer.prototype.byteLength")])]),r._v(" "),t("td",[r._v("数组的字节大小。在数组创建时确定，并且不可变更。"),t("strong",[r._v("只读")]),r._v("。")])])])]),r._v(" "),t("h3",{attrs:{id:"方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法-2","aria-hidden":"true"}},[r._v("#")]),r._v(" 方法")]),r._v(" "),t("table",[t("thead",[t("tr",[t("th",[r._v("方法")]),r._v(" "),t("th",[r._v("描述")])])]),r._v(" "),t("tbody",[t("tr",[t("td",[t("code",[r._v("ArrayBuffer.prototype.slice()")])]),r._v(" "),t("td",[r._v("返回一个新的 "),t("code",[r._v("ArrayBuffer")]),r._v(" ，它的内容是这个 "),t("code",[r._v("ArrayBuffer")]),r._v(" 的字节副本，从 "),t("code",[r._v("begin")]),r._v("（包括），到 "),t("code",[r._v("end")]),r._v("（不包括）。如果 "),t("code",[r._v("begin")]),r._v(" 或 "),t("code",[r._v("end")]),r._v(" 是负数，则指的是从数组末尾开始的索引，而不是从头开始。")])])])]),r._v(" "),t("h2",{attrs:{id:"示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[r._v("#")]),r._v(" 示例")]),r._v(" "),t("h3",{attrs:{id:"标准示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标准示例","aria-hidden":"true"}},[r._v("#")]),r._v(" 标准示例")]),r._v(" "),t("p",[r._v("下面的例子创建了一个 8 字节的缓冲区，并使用一个 "),t("code",[r._v("Int32Array")]),r._v(" 来引用它：")]),r._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("var")]),r._v(" buffer "),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v("=")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("new")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[r._v("ArrayBuffer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[r._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(";")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("var")]),r._v(" view   "),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v("=")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("new")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[r._v("Int32Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),r._v("buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(";")]),r._v("\n")])])]),t("h3",{attrs:{id:"视图生成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图生成","aria-hidden":"true"}},[r._v("#")]),r._v(" 视图生成")]),r._v(" "),t("p",[r._v("ArrayBuffer 作为内存区域，可以存放多种类型的数据。不同数据有不同的存储方式，这就叫做"),t("strong",[r._v("视图")]),r._v("。")]),r._v(" "),t("p",[r._v("目前，JavaScript 提供以下类型的视图：")]),r._v(" "),t("ul",[t("li",[r._v("Int8Array：8位有符号整数，长度1个字节。")]),r._v(" "),t("li",[r._v("Uint8Array：8位无符号整数，长度1个字节。")]),r._v(" "),t("li",[r._v("Int16Array：16位有符号整数，长度2个字节。")]),r._v(" "),t("li",[r._v("Uint16Array：16位无符号整数，长度2个字节。")]),r._v(" "),t("li",[r._v("Int32Array：32位有符号整数，长度4个字节。")]),r._v(" "),t("li",[r._v("Uint32Array：32位无符号整数，长度4个字节。")]),r._v(" "),t("li",[r._v("Float32Array：32位浮点数，长度4个字节。")]),r._v(" "),t("li",[r._v("Float64Array：64位浮点数，长度8个字节。")])]),r._v(" "),t("p",[r._v("每一种视图都有一个BYTES_PER_ELEMENT常数，表示这种数据类型占据的字节数。")]),r._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[r._v("Int8Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[r._v("BYTES_PER_ELEMENT")]),r._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("// 1")]),r._v("\nUint8Array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[r._v("BYTES_PER_ELEMENT")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("// 1")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("//...")]),r._v("\n")])])]),t("p",[r._v("每一种视图都是一个构造函数，有多种方法可以生成。")]),r._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("// 浏览器控制台输出：")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v(">")]),r._v(" Int32Array\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v(">")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[r._v("function")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("Int32Array")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v(")")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("{")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("[")]),r._v("native code"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("]")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[r._v("}")]),r._v("\n")])])])])},[],!1,null,null,null);a.default=s.exports}}]);