(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{457:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"history对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history对象的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" History对象的方法")]),t._v(" "),a("h3",{attrs:{id:"history-go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-go","aria-hidden":"true"}},[t._v("#")]),t._v(" history.go()")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("history.go()")]),t._v(" 方法可以在用户的历史记录中任意跳转，可以向后也可以向前。这个方法接受一个参数，表示向后或向前跳转的页面数的一个整数值。负数表示向后跳转（类似于单击浏览器的“后退”按钮），正数表示向前跳转（类似于单击浏览器的“前进”按钮）。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后退一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进两页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("也可以给 "),a("code",[t._v("go()")]),t._v(" 方法传递一个字符串参数，此时浏览器会跳转到历史记录中包含该字符串的第一个位置——可能后退，也可能前进，具体要看哪个位置最近。如果历史记录中不包含该字符串，那么这个方法什么也不做。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳转到最近的 github.com 页面")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当"),a("code",[t._v("history.go()")]),t._v(" 方法无参数时，相当于 "),a("code",[t._v("history.go(0)")]),t._v("，可以刷新当前页面")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刷新当前页面")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 刷新当前页面")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"history-back"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-back","aria-hidden":"true"}},[t._v("#")]),t._v(" history.back()")]),t._v(" "),a("p",[a("code",[t._v("history.back()")]),t._v(" 方法用于模仿浏览器的后退按钮，相当于 "),a("code",[t._v("history.go(-1)")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面两种写法效果一致")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"history-forward"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-forward","aria-hidden":"true"}},[t._v("#")]),t._v(" history.forward()")]),t._v(" "),a("p",[a("code",[t._v("forward()")]),t._v(" 方法用于模仿浏览器的前进按钮，相当于 "),a("code",[t._v("history.go(1)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后退一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前进一页")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("如果移动的位置超出了访问历史的边界，以上三个方法并不报错，而是静默失败 。")]),t._v(" "),a("p",[t._v("使用历史记录时，页面通常从浏览器缓存之中加载，而不是重新要求服务器发送新的网页。")]),t._v(" "),a("h3",{attrs:{id:"history-pushstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-pushstate","aria-hidden":"true"}},[t._v("#")]),t._v(" history.pushState()")]),t._v(" "),a("p",[t._v("向当前浏览记录栈中添加一条新的历史记录，添加后页面不会重新加载。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("state："),a("strong",[t._v("用于存储该 URL 对应的状态对象")]),t._v("。该对象可通过 "),a("code",[t._v("history.state")]),t._v(" 或 "),a("code",[t._v("popstate")]),t._v(" 事件回调中的 event 对象获取。如果不需要这个对象，此处可以填 null。")]),t._v(" "),a("li",[t._v("title："),a("strong",[t._v("新页面的标题")]),t._v("，但是所有浏览器目前都忽略这个值，因此这里可以填 null。")]),t._v(" "),a("li",[t._v("url："),a("strong",[t._v("URL 地址")]),t._v("，不允许跨域。这个参数可选，如果它没有被特别标注，会被设置为文档的当前URL。")])]),t._v(" "),a("p",[a("code",[t._v("history.pushState")]),t._v(" 函数向浏览器的历史堆栈压入一个url为设定值的记录，并改变历史堆栈的当前指针至栈顶。")]),t._v(" "),a("p",[t._v("调用 "),a("code",[t._v("pushState()")]),t._v(" 方法将新生成一条历史记录，方便用浏览器的“后退”和“前进”来导航（“后退”可是相当常用的按钮）。另外，从URL的同源策略可以看出，HTML5 history API 的出发点是很明确的，就是让无跳转的单站点也可以将它的各个状态保存为浏览器的多条历史记录。当通过历史记录重新加载站点时，站点可以直接加载到对应的状态。")]),t._v(" "),a("h3",{attrs:{id:"history-replacestate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history-replacestate","aria-hidden":"true"}},[t._v("#")]),t._v(" history.replaceState()")]),t._v(" "),a("p",[t._v("它和 "),a("code",[t._v("history.pushState()")]),t._v(" 方法基本相同，区别只有一点，"),a("strong",[a("code",[t._v("history.replaceState()")]),t._v(" 不会新生成历史记录，而是将当前历史记录替换掉，常用于落地页")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("history"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"window-onpopstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#window-onpopstate","aria-hidden":"true"}},[t._v("#")]),t._v(" window.onpopstate")]),t._v(" "),a("p",[t._v("push 的对立就是 pop，可以猜到这个事件是在浏览器取出历史记录并加载时触发的。但实际上，它的条件是比较苛刻的，几乎只有"),a("strong",[t._v("点击浏览器的“前进”、“后退”这些导航按钮，或者是由 JavaScript 调用的 "),a("code",[t._v("history.back()")]),t._v(" 等导航方法")]),t._v("，且"),a("strong",[t._v("切换前后的两条历史记录都属于同一个网页文档")]),t._v("，才会触发本事件，因为这些操作有一个共性，即修改了历史堆栈的当前指针。")]),t._v(" "),a("p",[t._v("上面的“同一个网页文档”请理解为 JavaScript 环境的 "),a("code",[t._v("document")]),t._v(" 是同一个，而不是指基础 URL（去掉各类参数的）相同。也就是说，只要有重新加载发生（无论是跳转到一个新站点还是继续在本站点），JavaScript 全局环境发生了变化，"),a("code",[t._v("popstate")]),t._v(" 事件都不会触发。")]),t._v(" "),a("p",[a("code",[t._v("popstate")]),t._v(" 事件是设计出来和前面的2个方法搭配使用的。一般只有在通过前面2个方法设置了同一站点的多条历史记录，并在其之间导航（前进或后退）时，才会触发这个事件。同时，前面2个方法所设置的状态对象（第1个参数），也会在这个时候通过事件的 "),a("code",[t._v("event.state")]),t._v(" 返还回来。")]),t._v(" "),a("p",[t._v("此外请注意，"),a("code",[t._v("history.pushState()")]),t._v(" 及 "),a("code",[t._v("history.replaceState()")]),t._v(" 本身调用时是不触发 "),a("code",[t._v("popstate")]),t._v(" 事件的。pop和push毕竟不一样！")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onpopstate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"location: "')]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", state: "')]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"浏览器兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Feature")]),t._v(" "),a("th",[t._v("Chrome")]),t._v(" "),a("th",[t._v("Firefox（Gecko）")]),t._v(" "),a("th",[t._v("Internet Explorer")]),t._v(" "),a("th",[t._v("Opera")]),t._v(" "),a("th",[t._v("Safari")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("replaceState.pushState")]),t._v(" "),a("td",[t._v("5")]),t._v(" "),a("td",[t._v("4.0（2.0）")]),t._v(" "),a("td",[t._v("10")]),t._v(" "),a("td",[t._v("11.50")]),t._v(" "),a("td",[t._v("5.0")])]),t._v(" "),a("tr",[a("td",[t._v("history.state")]),t._v(" "),a("td",[t._v("18")]),t._v(" "),a("td",[t._v("4.0（2.0）")]),t._v(" "),a("td",[t._v("10")]),t._v(" "),a("td",[t._v("11.50")]),t._v(" "),a("td",[t._v("6.0")])])])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("资料参考（深入了解）：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/ShowJoy-com/showjoy-blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[t._v("「前端」History API与浏览器历史堆栈管理"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=e.exports}}]);