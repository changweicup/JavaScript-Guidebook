(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{371:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),s("p",[a._v("JavaScript 是一种 "),s("strong",[a._v("弱类型语言")]),a._v(" 或者说 "),s("strong",[a._v("动态语言")]),a._v("。这意味着你不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。")]),a._v(" "),s("p",[a._v("这也意味着你可以使用同个相同名称的变量保存不同类型的数据：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// foo is a Number now")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// foo is a String now")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// foo is a Boolean now")]),a._v("\n")])])]),s("p",[a._v("ECMAScript 标准定义了原始数据类型和引用数据类型，共七种内置类型：")]),a._v(" "),s("ul",[s("li",[a._v("原始数据类型（基本类型）：按值访问，可以操作保存在变量中实际的值。\n"),s("ul",[s("li",[s("strong",[a._v("空值")]),a._v("（null）")]),a._v(" "),s("li",[s("strong",[a._v("未定义")]),a._v("（undefined）")]),a._v(" "),s("li",[s("strong",[a._v("布尔值")]),a._v("（boolean）")]),a._v(" "),s("li",[s("strong",[a._v("数字")]),a._v("（number）")]),a._v(" "),s("li",[s("strong",[a._v("字符串")]),a._v("（string）")]),a._v(" "),s("li",[s("strong",[a._v("符号")]),a._v("（symbol）")])])]),a._v(" "),s("li",[a._v("引用类型（复杂数据类型）：引用类型的值是保存在内存中的对象。\n"),s("ul",[s("li",[s("strong",[a._v("对象")]),a._v("（Object）\n"),s("ul",[s("li",[a._v("布尔对象（Boolean）")]),a._v(" "),s("li",[a._v("数字对象（Number）")]),a._v(" "),s("li",[a._v("字符串对象（String）")]),a._v(" "),s("li",[a._v("函数对象（Function）")]),a._v(" "),s("li",[a._v("数组对象（Array）")]),a._v(" "),s("li",[a._v("日期对象（Date）")]),a._v(" "),s("li",[a._v("正则对象（RegExp）")]),a._v(" "),s("li",[a._v("错误对象（Error）")])])])])])]),a._v(" "),s("p",[a._v("📍 与其他语言不同的是，JavaScript 不允许直接访问内存中的位置，也就是说不能直接操作对象的内存空间。在操作对象时，实际上是在操作对象的引用而不是实际的对象。所以引用类型的值是按引用访问的。")]),a._v(" "),s("h2",{attrs:{id:"原始数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始数据类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 原始数据类型")]),a._v(" "),s("h3",{attrs:{id:"空值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空值","aria-hidden":"true"}},[a._v("#")]),a._v(" 空值")]),a._v(" "),s("p",[a._v("空值 "),s("code",[a._v("null")]),a._v(" 是一个字面量，它不像 "),s("code",[a._v("undefined")]),a._v(" 是全局对象的一个属性。")]),a._v(" "),s("p",[s("code",[a._v("null")]),a._v(" 是表示缺少的标识，指示变量未指向任何对象。把 "),s("code",[a._v("null")]),a._v(" 作为尚未创建的对象，也许更好理解。")]),a._v(" "),s("p",[a._v("🌰 "),s("strong",[a._v("标准示例：")])]),a._v(" "),s("p",[s("code",[a._v("foo")]),a._v(" 不存在，它从来没有被定义过或者是初始化过。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ReferenceError: foo is not defined"')]),a._v("\n")])])]),s("p",[s("code",[a._v("foo")]),a._v(" 现在已经是知存在的，但是它没有类型或者是值。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nfoo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v("\n")])])]),s("h3",{attrs:{id:"未定义值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未定义值","aria-hidden":"true"}},[a._v("#")]),a._v(" 未定义值")]),a._v(" "),s("p",[a._v("未定义值 "),s("code",[a._v("undefined")]),a._v(" 是全局对象的一个属性。也就是说，它是全局作用域的一个变量。"),s("code",[a._v("undefined")]),a._v(" 的最初值就是原始数据类型 "),s("code",[a._v("undefined")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" foo\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// undefined")]),a._v("\n")])])]),s("h3",{attrs:{id:"布尔值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔值","aria-hidden":"true"}},[a._v("#")]),a._v(" 布尔值")]),a._v(" "),s("p",[a._v("布尔类型表示一个逻辑实体，可以有两个值："),s("code",[a._v("true")]),a._v(" 和 "),s("code",[a._v("false")])]),a._v(" "),s("h3",{attrs:{id:"数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字","aria-hidden":"true"}},[a._v("#")]),a._v(" 数字")]),a._v(" "),s("h4",{attrs:{id:"进制数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进制数","aria-hidden":"true"}},[a._v("#")]),a._v(" 进制数")]),a._v(" "),s("ul",[s("li",[a._v("十进制：JavaScript 中默认的进制数")]),a._v(" "),s("li",[a._v("八进制：第一位必须是 0，然后是 0-7 的数字组成")]),a._v(" "),s("li",[a._v("十六进制：前两位必须是 "),s("code",[a._v("0x")]),a._v("，然后是 0-9 及 A-F（字母不区分大小写）")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十进制")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 八进制的56")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("070")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十进制，因为有数字超过了7，这里是79")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("079")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 十六进制的31")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x1f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("⚠️ "),s("strong",[a._v("注意")]),a._v("：八进制在严格模式下 "),s("code",[a._v('"use strict"')]),a._v(" 是无效的，会导致 JavaScript 报错，避免使用。")]),a._v(" "),s("h4",{attrs:{id:"浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数","aria-hidden":"true"}},[a._v("#")]),a._v(" 浮点数")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2.3'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 0.30000000000000000004")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 229.99999999999997")]),a._v("\n")])])]),s("p",[a._v("上面例子表达的就是 JavaScript 的浮点型数据在计算时容易丢失精度，这一点并不仅在 JavaScript 存在，建议处理这方面问题使用专用的数字处理类，比如 Java 里的 BigDecima 类来处理。")]),a._v(" "),s("h4",{attrs:{id:"数字的范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字的范围","aria-hidden":"true"}},[a._v("#")]),a._v(" 数字的范围")]),a._v(" "),s("p",[a._v("JavaScript 中数值的范围是有效位数的，基本上够我们使用，我们仅需要知道以下几个知识点：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Number.MIN_VALUE")]),a._v(" 或 "),s("code",[a._v("Number.NEGATIVE_INFINITY")]),a._v("：表示 JavaScript 中的最小值")]),a._v(" "),s("li",[s("code",[a._v("Number.MAX_VALUE")]),a._v(" 或 "),s("code",[a._v("Number.POSITIVE_INFINITY")]),a._v("：表示 JavaScript 中的最大值")]),a._v(" "),s("li",[s("code",[a._v("Infinity")]),a._v("：表示无穷大")]),a._v(" "),s("li",[s("code",[a._v("-Infinity")]),a._v("：表示无穷小")])]),a._v(" "),s("h4",{attrs:{id:"nan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan","aria-hidden":"true"}},[a._v("#")]),a._v(" NaN")]),a._v(" "),s("p",[s("code",[a._v("NaN")]),a._v(" （Not a number）的含义是本该返回数值的操作未返回数值，返回了 "),s("code",[a._v("NaN")]),a._v(" 就不会抛出异常影响语句流畅性。")]),a._v(" "),s("p",[s("code",[a._v("NaN")]),a._v(" 属性的初始值就是 "),s("code",[a._v("NaN")]),a._v("，和 "),s("code",[a._v("Number.NaN")]),a._v(" 的值一样。")]),a._v(" "),s("p",[a._v("在现代浏览器中（ES5 环境）， "),s("code",[a._v("NaN")]),a._v(" 属性是一个不可配置（non-configurable）、不可写（non-writable）的属性。但在 ES3 中，这个属性的值是可以被更改的，但是也应该避免覆盖。")]),a._v(" "),s("p",[a._v("编码中很少直接使用到 "),s("code",[a._v("NaN")]),a._v("。通常都是在"),s("strong",[a._v("计算失败")]),a._v("时，作为 "),s("code",[a._v("Math")]),a._v(" 的某个方法的返回值出现的（例如："),s("code",[a._v("Math.sqrt(-1)")]),a._v("）或者尝试将一个字符串解析成数字但失败了的时候（例如："),s("code",[a._v('parseInt("blabla")')]),a._v("）。")]),a._v(" "),s("h3",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串","aria-hidden":"true"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),s("p",[a._v("JavaScript 的字符串类型用于表示文本数据。它是一组 16 位的无符号整数值的元素。在字符串中的每个元素占据了字符串的位置。第一个元素的索引为 0，下一个是索引 1，依此类推。字符串的长度是它的元素的数量。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'1234'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'one line \\n another line'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"John\'s cat"')]),a._v("\n")])])]),s("h3",{attrs:{id:"符号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#符号","aria-hidden":"true"}},[a._v("#")]),a._v(" 符号")]),a._v(" "),s("p",[a._v("符号（Symbols）是 ECMAScript 第 6 版新定义的。该类型的性质在于这个类型的值可以用来创建匿名的对象属性。该数据类型通常被用作一个对象属性的键值，当这个属性是用于类或对象类型的内部使用的时候。")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v("  myPrivateMethod  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("myPrivateMethod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型","aria-hidden":"true"}},[a._v("#")]),a._v(" 引用数据类型")]),a._v(" "),s("p",[a._v("引用类型通常叫做类（Class），也就是说，遇到引用值，所处理的就是对象。")]),a._v(" "),s("p",[a._v("从传统意义上来说，ECMAScript 没有真正的类。事实上，除了说明不存在类，在 ECMA-262 中根本没有出现 "),s("strong",[a._v("类")]),a._v(" 这个词，而是定义了 "),s("strong",[a._v("对象定义")]),a._v("，逻辑上等价于其他程序设计语言中的类。")]),a._v(" "),s("p",[a._v("对象是由 "),s("code",[a._v("new")]),a._v(" 运算符加上要实例化的对象的名字创建的。")]),a._v(" "),s("p",[a._v("例如，下面的代码创建 Object 对象的实例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("这种语法与 Java 语言的相似，不过当有不止一个参数时，ECMAScript 要求使用括号。")]),a._v(" "),s("p",[a._v("如果没有参数，如以下代码所示，括号可以省略：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("尽管括号不是必需的，但是为了避免混乱，最好使用括号。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("参考资料")]),a._v("：")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Symbol",target:"_blank",rel:"noopener noreferrer"}},[a._v("Symbol 术语表"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects",target:"_blank",rel:"noopener noreferrer"}},[a._v("Global Objects"),s("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=n.exports}}]);