(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{213:function(t,r,e){t.exports=e.p+"assets/img/a9937bb4-0461-4820-a91d-4e8936bcb83a.ad6ebc3f.png"},214:function(t,r,e){t.exports=e.p+"assets/img/5cf5f7d9-4fc8-4b6b-892b-8a10d7d819cf.341548d8.png"},440:function(t,r,e){"use strict";e.r(r);var a=e(2),s=Object(a.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"构建对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建对象模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 构建对象模型")]),t._v(" "),a("p",[t._v("浏览器渲染页面前需要先构建 DOM 树和 CSSOM 树。而 DOM 树 和 CSSOM 树是基于 HTML 文件和 CSS 文件构建的。")]),t._v(" "),a("h2",{attrs:{id:"文档对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档对象模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档对象模型")]),t._v(" "),a("p",[t._v("文档对象模型的构建过程。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("字节（Bytes）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("字符（Characters）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("令牌（Tokens）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("节点（Nodes）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" 文档对象模型（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("）\n")])])]),a("p",[a("img",{attrs:{src:e(213),alt:"文档对象模型图解"}})]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("转换：")]),t._v(" 浏览器从磁盘或网络读取 HTML 的原始字节，并根据文件的指定编码（例如 UTF-8）将它们转换成各个字符。")]),t._v(" "),a("li",[a("strong",[t._v("令牌化：")]),t._v(" 浏览器将字符串转换成 "),a("a",{attrs:{href:"http://www.w3.org/TR/html5/",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C HTML5 标准"),a("OutboundLink")],1),t._v(" 规定的各种令牌，例如，"),a("code",[t._v("<html>")]),t._v("、"),a("code",[t._v("<body>")]),t._v("，以及其他尖括号内的字符串。每个令牌都具有特殊含义和一组规则。")]),t._v(" "),a("li",[a("strong",[t._v("词法分析：")]),t._v(' 发出的令牌转换成定义其属性和规则的"对象"。')]),t._v(" "),a("li",[a("strong",[t._v("DOM 构建：")]),t._v(" 最后，由于 HTML 标记定义不同标记之间的关系（一些标记包含在其他标记内），创建的对象链接在一个树数据结构内，此结构也会捕获原始标记中定义的父项-子项关系：HTML 对象是 "),a("code",[t._v("body")]),t._v(" 对象的父项，"),a("code",[t._v("body")]),t._v(" 是 "),a("code",[t._v("paragraph")]),t._v(" 对象的父项，依此类推。")])]),t._v(" "),a("p",[a("strong",[t._v("整个流程的最终输出是我们这个简单页面的文档对象模型 (DOM)，浏览器对页面进行的所有进一步处理都会用到它。")])]),t._v(" "),a("p",[t._v("浏览器每次处理 HTML 标记时，都会完成以上所有步骤：将字节转换成字符，确定令牌，将令牌转换成节点，然后构建 DOM 树。这整个流程可能需要一些时间才能完成，有大量 HTML 需要处理时更是如此。")]),t._v(" "),a("h2",{attrs:{id:"css-对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-对象模型","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 对象模型")]),t._v(" "),a("p",[t._v("与处理 HTML 时一样，我们需要将收到的 CSS 规则转换成某种浏览器能够理解和处理的东西。因此，我们会重复 HTML 过程，不过是为 CSS 而不是 HTML：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("字节（Bytes）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("字符（Characters）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("令牌（Tokens）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("节点（Nodes）")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 对象模型（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v("）\n")])])]),a("p",[t._v("CSS 字节转换成字符，接着转换成令牌和节点，最后链接到一个称为 CSS 对象模型（CSSOM）的树结构内：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(214),alt:"CSS 对象模型图解"}})]),t._v(" "),a("p",[t._v("CSSOM 为何具有树结构？为页面上的任何对象计算最后一组样式时，浏览器都会先从适用于该节点的最通用规则开始（例如，如果该节点是 "),a("code",[t._v("body")]),t._v(" 元素的子项，则应用所有 "),a("code",[t._v("body")]),t._v(" 样式），然后通过应用更具体的规则（即规则"),a("strong",[t._v("向下级联")]),t._v("）以递归方式优化计算的样式。")]),t._v(" "),a("p",[t._v("还请注意，以上树并非完整的 CSSOM 树，它只显示了我们决定在样式表中替换的样式。每款浏览器都提供一组默认样式（也称为 User Agent 样式），即我们不提供任何自定义样式时所看到的样式，我们的样式只是替换这些默认样式（例如 "),a("a",{attrs:{href:"http://www.iecss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认 IE 样式"),a("OutboundLink")],1),t._v("）。")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("参考资料：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.w3.org/TR/html5/syntax.html#html-parser",target:"_blank",rel:"noopener noreferrer"}},[t._v("📖 W3C The HTML syntax: Parsing HTML documents"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.w3.org/DOM/DOMTR",target:"_blank",rel:"noopener noreferrer"}},[t._v("📖 W3C Document Object Model (DOM) Technical Reports"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 Ilya Grigorik: Constructing the Object Model"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b0a6f1af265da0ddb63ecd9",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 浏览器原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/wjlog/p/5744753.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("📝 前端必读：浏览器内部工作原理"),a("OutboundLink")],1)])])])},[],!1,null,null,null);r.default=s.exports}}]);